#!/usr/bin/env node

var pkg = require('../package'),
    fs = require('fs'),
    dox = require('dox'),
    hbs = require('handlebars'),
    helpers = require('../lib/helpers')(hbs),
    utils = require('../lib/utils');

var templates = {
    bootstrap: require('../templates/bootstrap.hbs'),
    markdown: require('../templates/markdown.hbs')
};

var title = 'Untitled Project',
    description = '',
    layout = 'bootstrap';

var args = process.argv.slice(2),
    value;

var filename = '';

while (args.length) {

    value = args.shift();

    switch (value) {

    case '-t':
    case '--title':
        title = args.shift();
        break;

    case '-d':
    case '--description':
        description = args.shift();
        break;

    case '-l':
    case '--layout':
        layout = args.shift();
        break;

    case '-v':
    case '--version':
        process.stdout.write(pkg.version + '\n');
        break;

    case '-h':
    case '--help':
        process.stdout.write('\n');
        process.stdout.write(' Usage: doxdox <file> [options]' + '\n\n');
        process.stdout.write(' Options:' + '\n\n');
        process.stdout.write(' -h, --help\t\tDisplay this help message.' + '\n');
        process.stdout.write(' -t, --title\t\tSets title.' + '\n');
        process.stdout.write(' -d, --description\tSets description.' + '\n');
        process.stdout.write(' -l, --layout\t\tTemplate to render the documentation with.' + '\n');
        process.stdout.write('\n');
        process.stdout.write(' Available Layouts:' + '\n\n');
        process.stdout.write(' - Bootstrap 3 (http://getbootstrap.com/)' + '\n');
        process.stdout.write(' - Markdown (http://daringfireball.net/projects/markdown/)' + '\n');
        process.stdout.write('\n');
        break;

    default:
        filename = value;
        break;

    }

}

fs.exists(filename, function (exists) {

    var data;

    if (exists) {

        data = dox.parseComments(fs.readFileSync(filename, 'utf8'));

        process.stdout.write(templates[layout]({
            title: title,
            description: description,
            methods: utils.parseData(data)
        }));

    } else {

        console.log('File not found.');

    }

});
